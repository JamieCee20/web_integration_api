; <?php exit

[documentation]
title = "Documentation";
heading1 = "Documentation Page";
endpoints = "<div class='container'>
    <p style='color: white;'>
        <strong class='heading-name'>api</strong> This returns a message and an author description<br><br>
        <div>
            <strong class='heading-name'>authors</strong> This returns all authors in the database and has some parameter features: 
            <ol>
                <li>Search: search for names similar to the search i.e. api/authors?search=name</li><br>
                <li>ContentId: find authors that relate to a specific content i.e. api/authors?contentId=1234</li><br>
                <li>ID: search for authors with matching ID i.e. api/authors?id=123</li><br>
                <li>Limit: limit search results i.e. api/authors?limit=5</li><br>
                <li>Page: page number for authors with page limit to 10 i.e. api/authors?page=3</li>
            <ol><br><br>
        </div>
        <div>
            <strong class='heading-name'>content</strong> This returns json data for the content table:
            <ol>
                <li>SessionId: filter data with matching sessionId, i.e. api/content?sessionId=1234</li><br>
                <li>AuthorId: filter data with matching authorId, i.e. api/content?authorId=1234</li><br>
                <li>Title: filter data with matching title, i.e. api/content?title=name</li><br>
                <li>Abstract: filter data with matching abstract, i.e. api/content?abstract=abstract</li><br>
                <li>Award: filter data with matching award, i.e. api/content?award=award</li><br>
                <li>Limit: limit search results i.e. api/content?limit=5</li><br>
                <li>Page: page number for content with page limit to 10 i.e. api/content?page=3</li>
            </ol><br><br>
        </div>
        <div>
            <strong class='heading-name'>rooms</strong> This returns json data for the rooms table:
            <ol>
                <li>search: filter data with matching search name, i.e. api/rooms?search=name</li><br>
                <li>id: filter data with matching authorId, i.e. api/rooms?id=id</li><br>
                <li>limit: filter data limiting to limit parameter, i.e. api/rooms?limit=5</li><br>
                <li>page: filter data with page number, i.e. api/rooms?page=2</li><br>
            </ol><br><br>
        </div>
        <div>
            <strong class='heading-name'>sessionTypes</strong> This returns json data for the sessionTypes table:
            <ol>
                <li>search: filter data with matching search name, i.e. api/sessionTypes?search=name</li><br>
                <li>id: filter data with matching sessionType id, i.e. api/sesstionTypes?id=id</li><br>
                <li>limit: filter data limiting to limit parameter, i.e. api/sessionTypes?limit=5</li><br>
                <li>page: filter data with page number, i.e. api/sessionTypes?page=2</li><br>
            </ol><br><br>
        </div>
        <div>
            <strong class='heading-name'>sessions</strong> This returns json data for the sessions table:
            <ol>
                <li>authorId: filter data with matching authorId, i.e. api/sessions?authorId=1234</li><br>
                <li>search: filter data with matching search name, i.e. api/sessions?search=name</li><br>
                <li>id: filter data with matching session id, i.e. api/sessions?id=id</li><br>
                <li>page: filter data with page number, i.e. api/sessions?page=2</li><br>
            </ol><br><br>
        </div>
        <div>
            <strong class='heading-name'>slots</strong> This returns json data for the slots table:
            <ol>
                <li>type: filter data with matching type, i.e. api/slots?type=BREAK</li><br>
                <li>day: filter data with matching dayString, i.e. api/slots?day=SATURDAY</li><br>
            </ol><br><br>
        </div>
        <div>
            <strong class='heading-name'>login</strong> This returns json data and a token for authenticated users via a POST request.
        </div><br><br>
        <div>
            <strong class='heading-name'>update</strong> validates that the user is authenticated and has the required token before updating required data.
        </div><br><br>
        <div>
            <strong class='heading-name'>Default Message</strong> Default message is what returns if a searched endpoint does not exist. It returns a valid message and status code in relation to an invalid endpoint.
        </div>
    </p>
</div>
";
footer = "Jamie Collins, 2020";

[about]
title = "About Us";
heading1 = "About Page";
endpoints = "<div class='container'>
    <p>
        <strong class='heading-name'>Name: </strong> Jamie Collins<br><br>
        <strong class='heading-name'>Disclaimer</strong> All content on this website is university coursework and does not associate with the CHI conference or any of it's sponsors in any way, shape or form.
    </p>
</div>
";  
footer = "Jamie Collins, 2020"; 

[error]
title = "Errors";
heading1 = "Error Page"; 
endpoints = "<div class='container'>
<p>Page not found</p>
</div>"; 
footer = "Jamie Collins, 2020"; 

